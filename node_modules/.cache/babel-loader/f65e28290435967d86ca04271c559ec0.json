{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { __extends, __read } from \"tslib\";\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\n\nvar XYChart =\n/** @class */\nfunction (_super) {\n  __extends(XYChart, _super);\n\n  function XYChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A list of horizontal axes.\r\n     */\n\n\n    Object.defineProperty(_this, \"xAxes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListAutoDispose()\n    });\n    /**\r\n     * A list of vertical axes.\r\n     */\n\n    Object.defineProperty(_this, \"yAxes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListAutoDispose()\n    });\n    /**\r\n     * A [[Container]] located on top of the chart, used to store top horizontal\r\n     * axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"topAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.chartContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        layout: _this._root.verticalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located in the middle the chart, used to store vertical axes\r\n     * and plot area container.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"yAxesAndPlotContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.chartContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        layout: _this._root.horizontalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located on bottom of the chart, used to store bottom\r\n     * horizontal axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"bottomAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.chartContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        layout: _this._root.verticalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located on left of the chart, used to store left-hand\r\n     * vertical axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"leftAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, {\n        height: p100,\n        layout: _this._root.horizontalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"plotsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        maskContent: false\n      }))\n    });\n    /**\r\n     * A [[Container]] located in the middle of the chart, used to store actual\r\n     * plots (series).\r\n     *\r\n     * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n     * you need to modify background or outline for chart's plot area, you can\r\n     * use `plotContainer.get(\"background\")` for that.*\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"plotContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.plotsContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100\n      }))\n    });\n    /**\r\n     * A [[Container]] used for any elements that need to be displayed over\r\n     * regular `plotContainer`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"topPlotContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.plotsContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100\n      }))\n    });\n    /**\r\n     * A [[Container]] axis grid elements are stored in.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"gridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.plotContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        isMeasured: false\n      }))\n    });\n    /**\r\n     * A [[Container]] axis background grid elements are stored in.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"topGridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        isMeasured: false\n      })\n    });\n    /**\r\n     * A [[Container]] located on right of the chart, used to store right-hand\r\n     * vertical axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"rightAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, {\n        height: p100,\n        layout: _this._root.horizontalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] axis headers are stored in.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"axisHeadersContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.plotContainer.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A button that is shown when chart is not fully zoomed out.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n     * @default Button.new()\r\n     */\n\n    Object.defineProperty(_this, \"zoomOutButton\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.topPlotContainer.children.push(Button.new(_this._root, {\n        themeTags: [\"zoom\"],\n        icon: Graphics.new(_this._root, {\n          themeTags: [\"button\", \"icon\"]\n        })\n      }))\n    });\n    Object.defineProperty(_this, \"_movePoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        x: 0,\n        y: 0\n      }\n    });\n    Object.defineProperty(_this, \"_wheelDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_otherCharts\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_movePoints\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_downStartX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downEndX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downStartY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downEndY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(XYChart.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n      _super.prototype._afterNew.call(this);\n\n      this._disposers.push(this.xAxes);\n\n      this._disposers.push(this.yAxes);\n\n      var root = this._root;\n      var verticalLayout = this._root.verticalLayout;\n      var zoomOutButton = this.zoomOutButton;\n      zoomOutButton.events.on(\"click\", function () {\n        _this.zoomOut();\n      });\n      zoomOutButton.set(\"opacity\", 0);\n      zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\n      this.chartContainer.set(\"layout\", verticalLayout);\n      var plotContainer = this.plotContainer;\n      plotContainer.children.push(this.seriesContainer);\n\n      this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\n      this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n      plotContainer.children.push(this.topGridContainer);\n      plotContainer.children.push(this.bulletsContainer); // Setting trasnparent background so that full body of the plot container\n      // is interactive\n\n      plotContainer.set(\"interactive\", true);\n      plotContainer.set(\"interactiveChildren\", false);\n      plotContainer.set(\"background\", Rectangle.new(root, {\n        themeTags: [\"xy\", \"background\"],\n        fill: Color.fromHex(0x000000),\n        fillOpacity: 0\n      }));\n\n      this._disposers.push(plotContainer.events.on(\"pointerdown\", function (event) {\n        _this._handlePlotDown(event.originalEvent);\n      }));\n\n      this._disposers.push(plotContainer.events.on(\"globalpointerup\", function (event) {\n        _this._handlePlotUp(event.originalEvent);\n      }));\n\n      this._disposers.push(plotContainer.events.on(\"globalpointermove\", function (event) {\n        _this._handlePlotMove(event.originalEvent);\n      }));\n\n      this._maskGrid();\n\n      this._setUpTouch();\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n        this._setUpTouch();\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_setUpTouch\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this.plotContainer._display.cancelTouch) {\n        this.plotContainer._display.cancelTouch = this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\") ? true : false;\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_maskGrid\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.gridContainer.set(\"maskContent\", true);\n      this.topGridContainer.set(\"maskContent\", true);\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_removeSeries\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series) {\n      var xAxis = series.get(\"xAxis\");\n\n      if (xAxis) {\n        $array.remove(xAxis.series, series);\n      }\n\n      var yAxis = series.get(\"yAxis\");\n\n      if (yAxis) {\n        $array.remove(yAxis.series, series);\n      }\n\n      var cursor = this.get(\"cursor\");\n\n      if (cursor) {\n        var snapToSeries = cursor.get(\"snapToSeries\");\n\n        if (snapToSeries) {\n          $array.remove(snapToSeries, series);\n        }\n      }\n\n      _super.prototype._removeSeries.call(this, series);\n    }\n  });\n  /**\r\n   * This method is invoked when mouse wheel is used over chart's plot\r\n   * container, and handles zooming/pan.\r\n   *\r\n   * You can invoke this method manually, if you need to mimic chart's wheel\r\n   * behavior over other elements of the chart.\r\n   */\n\n  Object.defineProperty(XYChart.prototype, \"handleWheel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      var _this = this;\n\n      var wheelX = this.get(\"wheelX\");\n      var wheelY = this.get(\"wheelY\");\n      var plotContainer = this.plotContainer;\n      var wheelEvent = event.originalEvent; // Ignore wheel event if it is happening on a non-chart element, e.g. if\n      // some page element is over the chart.\n\n      if ($utils.isLocalEvent(wheelEvent, this)) {\n        wheelEvent.preventDefault();\n      } else {\n        return;\n      }\n\n      var plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({\n        x: wheelEvent.clientX,\n        y: wheelEvent.clientY\n      }));\n      var wheelStep = this.get(\"wheelStep\", 0.2);\n      var shiftY = wheelEvent.deltaY / 100;\n      var shiftX = wheelEvent.deltaX / 100;\n\n      if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n        this.xAxes.each(function (axis) {\n          if (axis.get(\"zoomX\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var position = axis.fixPosition(plotPoint.x / plotContainer.width());\n            var newStart = start - wheelStep * (end - start) * shiftX * position;\n            var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n            if (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n              _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n            }\n          }\n        });\n      }\n\n      if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n        this.xAxes.each(function (axis) {\n          if (axis.get(\"zoomX\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var position = axis.fixPosition(plotPoint.x / plotContainer.width());\n            var newStart = start - wheelStep * (end - start) * shiftY * position;\n            var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n            if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n              _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n            }\n          }\n        });\n      }\n\n      if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n        this.yAxes.each(function (axis) {\n          if (axis.get(\"zoomY\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var position = axis.fixPosition(plotPoint.y / plotContainer.height());\n            var newStart = start - wheelStep * (end - start) * shiftX * position;\n            var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n            if (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n              _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n            }\n          }\n        });\n      }\n\n      if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n        this.yAxes.each(function (axis) {\n          if (axis.get(\"zoomY\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var position = axis.fixPosition(plotPoint.y / plotContainer.height());\n            var newStart = start - wheelStep * (end - start) * shiftY * position;\n            var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n            if (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n              _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n            }\n          }\n        });\n      }\n\n      if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n        this.xAxes.each(function (axis) {\n          if (axis.get(\"panX\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n            var newStart = start + delta;\n            var newEnd = end + delta;\n\n            var se = _this._fixWheel(newStart, newEnd);\n\n            newStart = se[0];\n            newEnd = se[1];\n\n            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n          }\n        });\n      }\n\n      if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n        this.xAxes.each(function (axis) {\n          if (axis.get(\"panX\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n            var newStart = start + delta;\n            var newEnd = end + delta;\n\n            var se = _this._fixWheel(newStart, newEnd);\n\n            newStart = se[0];\n            newEnd = se[1];\n\n            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n          }\n        });\n      }\n\n      if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n        this.yAxes.each(function (axis) {\n          if (axis.get(\"panY\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n            var newStart = start + delta;\n            var newEnd = end + delta;\n\n            var se = _this._fixWheel(newStart, newEnd);\n\n            newStart = se[0];\n            newEnd = se[1];\n\n            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n          }\n        });\n      }\n\n      if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n        this.yAxes.each(function (axis) {\n          if (axis.get(\"panY\")) {\n            var start = axis.get(\"start\");\n            var end = axis.get(\"end\");\n            var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n            var newStart = start - delta;\n            var newEnd = end - delta;\n\n            var se = _this._fixWheel(newStart, newEnd);\n\n            newStart = se[0];\n            newEnd = se[1];\n\n            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleSetWheel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var wheelX = this.get(\"wheelX\");\n      var wheelY = this.get(\"wheelY\");\n      var plotContainer = this.plotContainer;\n\n      if (wheelX !== \"none\" || wheelY !== \"none\") {\n        this._wheelDp = plotContainer.events.on(\"wheel\", function (event) {\n          _this.handleWheel(event);\n        });\n\n        this._disposers.push(this._wheelDp);\n      } else {\n        if (this._wheelDp) {\n          this._wheelDp.dispose();\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_getWheelSign\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axis) {\n      var sign = 1;\n\n      if (axis.get(\"renderer\").get(\"inversed\")) {\n        sign = -1;\n      }\n\n      return sign;\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_fixWheel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (start, end) {\n      var diff = end - start;\n\n      if (start < 0) {\n        start = 0;\n        end = start + diff;\n      }\n\n      if (end > 1) {\n        end = 1;\n        start = end - diff;\n      }\n\n      return [start, end];\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handlePlotDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      var plotContainer = this.plotContainer;\n      var local = plotContainer.toLocal(this._root.documentPointToRoot({\n        x: event.clientX,\n        y: event.clientY\n      }));\n\n      if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n        var touchEvent = event;\n        var pointerId = touchEvent.pointerId;\n\n        if (pointerId) {\n          if ($object.keys(plotContainer._downPoints).length > 0) {\n            var xAxis = this.xAxes.getIndex(0);\n            var yAxis = this.yAxes.getIndex(0);\n\n            if (xAxis) {\n              this._downStartX = xAxis.get(\"start\", 0);\n              this._downEndX = xAxis.get(\"end\", 1);\n            }\n\n            if (yAxis) {\n              this._downStartY = yAxis.get(\"start\", 0);\n              this._downEndY = yAxis.get(\"end\", 1);\n            }\n          }\n        }\n      }\n\n      if (this.get(\"panX\") || this.get(\"panY\")) {\n        if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n          //this._downPoint = local;\n          this._downPoint = {\n            x: event.clientX,\n            y: event.clientY\n          };\n          var panX = this.get(\"panX\");\n          var panY = this.get(\"panY\");\n\n          if (panX) {\n            this.xAxes.each(function (axis) {\n              axis._panStart = axis.get(\"start\");\n              axis._panEnd = axis.get(\"end\");\n            });\n          }\n\n          if (panY) {\n            this.yAxes.each(function (axis) {\n              axis._panStart = axis.get(\"start\");\n              axis._panEnd = axis.get(\"end\");\n            });\n          }\n\n          var eventType = \"panstarted\";\n\n          if (this.events.isEnabled(eventType)) {\n            this.events.dispatch(eventType, {\n              type: eventType,\n              target: this\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleWheelAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (animation) {\n      var _this = this;\n\n      if (animation) {\n        animation.events.on(\"stopped\", function () {\n          _this._dispatchWheelAnimation();\n        });\n      } else {\n        this._dispatchWheelAnimation();\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_dispatchWheelAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var eventType = \"wheelended\";\n\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handlePlotUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_event) {\n      if (this._downPoint) {\n        if (this.get(\"panX\") || this.get(\"panY\")) {\n          var eventType = \"panended\";\n\n          if (this.events.isEnabled(eventType)) {\n            this.events.dispatch(eventType, {\n              type: eventType,\n              target: this\n            });\n          }\n        }\n      } // TODO: handle multitouch\n\n\n      this._downPoint = undefined;\n      this.xAxes.each(function (xAxis) {\n        xAxis._isPanning = false;\n      });\n      this.yAxes.each(function (yAxis) {\n        yAxis._isPanning = false;\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handlePlotMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      var plotContainer = this.plotContainer;\n\n      if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n        var touchEvent = event;\n        var pointerId = touchEvent.pointerId;\n\n        if (pointerId) {\n          this._movePoints[pointerId] = this._root.documentPointToRoot({\n            x: event.clientX,\n            y: event.clientY\n          });\n\n          if ($object.keys(plotContainer._downPoints).length > 1) {\n            this._handlePinch();\n\n            return;\n          }\n        }\n      }\n\n      var downPoint = this._downPoint;\n\n      if (downPoint) {\n        downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n        var local_1 = plotContainer.toLocal(this._root.documentPointToRoot({\n          x: event.clientX,\n          y: event.clientY\n        }));\n        var panX = this.get(\"panX\");\n        var panY = this.get(\"panY\");\n\n        if (panX) {\n          var scrollbarX = this.get(\"scrollbarX\");\n\n          if (scrollbarX) {\n            scrollbarX.events.disableType(\"rangechanged\");\n          }\n\n          this.xAxes.each(function (axis) {\n            if (axis.get(\"panX\")) {\n              axis._isPanning = true; //const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n              var panStart = axis._panStart;\n              var panEnd = axis._panEnd;\n              var difference = panEnd - panStart;\n              var deltaX = difference * (downPoint.x - local_1.x) / plotContainer.width();\n\n              if (axis.get(\"renderer\").get(\"inversed\")) {\n                deltaX *= -1;\n              }\n\n              var start = panStart + deltaX;\n              var end = panEnd + deltaX;\n\n              if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n                axis.set(\"start\", start);\n                axis.set(\"end\", end);\n              }\n            }\n          });\n\n          if (scrollbarX) {\n            scrollbarX.events.enableType(\"rangechanged\");\n          }\n        }\n\n        if (panY) {\n          var scrollbarY = this.get(\"scrollbarY\");\n\n          if (scrollbarY) {\n            scrollbarY.events.disableType(\"rangechanged\");\n          }\n\n          this.yAxes.each(function (axis) {\n            if (axis.get(\"panY\")) {\n              axis._isPanning = true; //const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n              var panStart = axis._panStart;\n              var panEnd = axis._panEnd;\n              var difference = panEnd - panStart;\n              var deltaY = difference * (downPoint.y - local_1.y) / plotContainer.height();\n\n              if (axis.get(\"renderer\").get(\"inversed\")) {\n                deltaY *= -1;\n              }\n\n              var start = panStart - deltaY;\n              var end = panEnd - deltaY;\n\n              if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n                axis.set(\"start\", start);\n                axis.set(\"end\", end);\n              }\n            }\n          });\n\n          if (scrollbarY) {\n            scrollbarY.events.enableType(\"rangechanged\");\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handlePinch\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a, _b, _c, _d;\n\n      var _this = this;\n\n      var plotContainer = this.plotContainer;\n      var i = 0;\n      var downPoints = [];\n      var movePoints = [];\n      $object.each(plotContainer._downPoints, function (k, point) {\n        downPoints[i] = point;\n        var movePoint = _this._movePoints[k];\n\n        if (movePoint) {\n          movePoints[i] = movePoint;\n        }\n\n        i++;\n      });\n\n      if (downPoints.length > 1 && movePoints.length > 1) {\n        var w = plotContainer.width();\n        var h = plotContainer.height();\n        var downPoint0 = downPoints[0];\n        var downPoint1 = downPoints[1];\n        var movePoint0 = movePoints[0];\n        var movePoint1 = movePoints[1];\n\n        if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n          movePoint0 = plotContainer.toLocal(movePoint0);\n          movePoint1 = plotContainer.toLocal(movePoint1);\n          downPoint0 = plotContainer.toLocal(downPoint0);\n          downPoint1 = plotContainer.toLocal(downPoint1);\n\n          if (this.get(\"pinchZoomX\")) {\n            var downStartX = this._downStartX;\n            var downEndX = this._downEndX;\n\n            if (downStartX != null && downEndX != null) {\n              if (downPoint0.x > downPoint1.x) {\n                _a = __read([downPoint1, downPoint0], 2), downPoint0 = _a[0], downPoint1 = _a[1];\n                _b = __read([movePoint1, movePoint0], 2), movePoint0 = _b[0], movePoint1 = _b[1];\n              }\n\n              var downPos0 = downStartX + downPoint0.x / w * (downEndX - downStartX);\n              var downPos1 = downStartX + downPoint1.x / w * (downEndX - downStartX);\n              var movePos0 = downStartX + movePoint0.x / w * (downEndX - downStartX);\n              var movePos1 = downStartX + movePoint1.x / w * (downEndX - downStartX);\n              var initialDistance = Math.max(0.001, downPos1 - downPos0);\n              var currentDistance = Math.max(0.001, movePos1 - movePos0);\n              var d = initialDistance / currentDistance;\n              var s_1 = downStartX * d + downPos0 - movePos0 * d;\n              var e_1 = downEndX * d + downPos1 - movePos1 * d;\n              this.xAxes.each(function (xAxis) {\n                var sa = xAxis.fixPosition(s_1);\n                var ea = xAxis.fixPosition(e_1);\n                xAxis.zoom(sa, ea, 0);\n              });\n            }\n          }\n\n          if (this.get(\"pinchZoomY\")) {\n            var downStartY = this._downStartY;\n            var downEndY = this._downEndY;\n\n            if (downStartY != null && downEndY != null) {\n              if (downPoint0.y < downPoint1.y) {\n                _c = __read([downPoint1, downPoint0], 2), downPoint0 = _c[0], downPoint1 = _c[1];\n                _d = __read([movePoint1, movePoint0], 2), movePoint0 = _d[0], movePoint1 = _d[1];\n              }\n\n              var downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n              var downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n              var movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n              var movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n              var initialDistance = Math.max(0.001, downPos1 - downPos0);\n              var currentDistance = Math.max(0.001, movePos1 - movePos0);\n              var d = initialDistance / currentDistance;\n              var s_2 = downStartY * d + downPos0 - movePos0 * d;\n              var e_2 = downEndY * d + downPos1 - movePos1 * d;\n              this.yAxes.each(function (yAxis) {\n                var sa = yAxis.fixPosition(s_2);\n                var ea = yAxis.fixPosition(e_2);\n                yAxis.zoom(sa, ea, 0);\n              });\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleCursorPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var cursor = this.get(\"cursor\");\n\n      if (cursor) {\n        var cursorPoint_1 = cursor.getPrivate(\"point\");\n        var snapToSeries = cursor.get(\"snapToSeries\");\n\n        if (snapToSeries && cursorPoint_1) {\n          var snapToSeriesBy_1 = cursor.get(\"snapToSeriesBy\");\n          var dataItems_1 = [];\n          $array.each(snapToSeries, function (series) {\n            if (!series.isHidden() && !series.isHiding()) {\n              if (snapToSeriesBy_1 != \"x!\" && snapToSeriesBy_1 != \"y!\") {\n                var startIndex = series.startIndex();\n                var endIndex = series.endIndex();\n\n                for (var i = startIndex; i < endIndex; i++) {\n                  var dataItem = series.dataItems[i];\n\n                  if (dataItem && !dataItem.isHidden()) {\n                    dataItems_1.push(dataItem);\n                  }\n                }\n              } else {\n                var tooltipDataItem = series.get(\"tooltipDataItem\");\n\n                if (tooltipDataItem) {\n                  dataItems_1.push(tooltipDataItem);\n                }\n              }\n            }\n          });\n          var minDistance_1 = Infinity;\n          var closestItem_1;\n          $array.each(dataItems_1, function (dataItem) {\n            var point = dataItem.get(\"point\");\n\n            if (point) {\n              var distance = 0;\n\n              if (snapToSeriesBy_1 == \"x\" || snapToSeriesBy_1 == \"x!\") {\n                distance = Math.abs(cursorPoint_1.x - point.x);\n              } else if (snapToSeriesBy_1 == \"y\" || snapToSeriesBy_1 == \"y!\") {\n                distance = Math.abs(cursorPoint_1.y - point.y);\n              } else {\n                distance = Math.hypot(cursorPoint_1.x - point.x, cursorPoint_1.y - point.y);\n              }\n\n              if (distance < minDistance_1) {\n                minDistance_1 = distance;\n                closestItem_1 = dataItem;\n              }\n            }\n          });\n          $array.each(snapToSeries, function (series) {\n            var tooltip = series.get(\"tooltip\");\n\n            if (tooltip) {\n              tooltip._setDataItem(undefined);\n            }\n          });\n\n          if (closestItem_1) {\n            var series = closestItem_1.component;\n            series.showDataItemTooltip(closestItem_1);\n            var point = closestItem_1.get(\"point\");\n\n            if (point) {\n              cursor.handleMove(series.toGlobal(point), true);\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_updateCursor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var cursor = this.get(\"cursor\");\n\n      if (cursor) {\n        cursor.handleMove();\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_addCursor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cursor) {\n      this.plotContainer.children.push(cursor);\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      this.series.each(function (series) {\n        _this._colorize(series);\n      });\n\n      if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n        this._handleSetWheel();\n      }\n\n      if (this.isDirty(\"cursor\")) {\n        var previous = this._prevSettings.cursor;\n        var cursor = this.get(\"cursor\");\n\n        if (cursor !== previous) {\n          this._disposeProperty(\"cursor\");\n\n          if (previous) {\n            previous.dispose();\n          }\n\n          if (cursor) {\n            cursor._setChart(this);\n\n            this._addCursor(cursor);\n\n            this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", function () {\n              _this._handleCursorSelectEnd();\n            }));\n          } //this.setRaw(\"cursor\", cursor) // to reset previous value\n\n\n          this._prevSettings.cursor = cursor;\n        }\n      }\n\n      if (this.isDirty(\"scrollbarX\")) {\n        var previous = this._prevSettings.scrollbarX;\n        var scrollbarX = this.get(\"scrollbarX\");\n\n        if (scrollbarX !== previous) {\n          this._disposeProperty(\"scrollbarX\");\n\n          if (previous) {\n            previous.dispose();\n          }\n\n          if (scrollbarX) {\n            if (!scrollbarX.parent) {\n              this.topAxesContainer.children.push(scrollbarX);\n            }\n\n            this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", function (e) {\n              _this._handleScrollbar(_this.xAxes, e.start, e.end, e.grip);\n            })); // Used to populate `ariaLabel` with meaningful values\n\n\n            scrollbarX.setPrivate(\"positionTextFunction\", function (position) {\n              var axis = _this.xAxes.getIndex(0);\n\n              return axis ? axis.getTooltipText(position) || \"\" : \"\";\n            });\n          }\n\n          this._prevSettings.scrollbarX = scrollbarX;\n        }\n      }\n\n      if (this.isDirty(\"scrollbarY\")) {\n        var previous = this._prevSettings.scrollbarY;\n        var scrollbarY = this.get(\"scrollbarY\");\n\n        if (scrollbarY !== previous) {\n          this._disposeProperty(\"scrollbarY\");\n\n          if (previous) {\n            previous.dispose();\n          }\n\n          if (scrollbarY) {\n            if (!scrollbarY.parent) {\n              this.rightAxesContainer.children.push(scrollbarY);\n            }\n\n            this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", function (e) {\n              _this._handleScrollbar(_this.yAxes, e.start, e.end, e.grip);\n            })); // Used to populate `ariaLabel` with meaningful values\n\n\n            scrollbarY.setPrivate(\"positionTextFunction\", function (position) {\n              var axis = _this.yAxes.getIndex(0);\n\n              return axis ? axis.getTooltipText(position) || \"\" : \"\";\n            });\n          }\n\n          this._prevSettings.scrollbarY = scrollbarY;\n        }\n      }\n\n      this._handleZoomOut();\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_processSeries\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series) {\n      _super.prototype._processSeries.call(this, series);\n\n      this._colorize(series);\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series) {\n      var colorSet = this.get(\"colors\");\n\n      if (colorSet) {\n        if (series.get(\"fill\") == null) {\n          var color = colorSet.next();\n\n          series._setSoft(\"stroke\", color);\n\n          series._setSoft(\"fill\", color);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleCursorSelectEnd\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var cursor = this.get(\"cursor\");\n      var behavior = cursor.get(\"behavior\");\n      var downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n      var downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n      var positionX = cursor.getPrivate(\"positionX\", 0.5);\n      var positionY = cursor.getPrivate(\"positionY\", 0.5);\n      this.xAxes.each(function (axis) {\n        if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n          var position0 = axis.toAxisPosition(downPositionX);\n          var position1 = axis.toAxisPosition(positionX);\n          axis.zoom(position0, position1);\n        }\n\n        axis.setPrivate(\"updateScrollbar\", true);\n      });\n      this.yAxes.each(function (axis) {\n        if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n          var position0 = axis.toAxisPosition(downPositionY);\n          var position1 = axis.toAxisPosition(positionY);\n          axis.zoom(position0, position1);\n        }\n\n        axis.setPrivate(\"updateScrollbar\", true);\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleScrollbar\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axes, start, end, priority) {\n      axes.each(function (axis) {\n        var axisStart = axis.fixPosition(start);\n        var axisEnd = axis.fixPosition(end);\n        var zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n        var updateScrollbar = \"updateScrollbar\";\n        axis.setPrivateRaw(updateScrollbar, false);\n\n        if (zoomAnimation) {\n          zoomAnimation.events.on(\"stopped\", function () {\n            axis.setPrivateRaw(updateScrollbar, true);\n          });\n        } else {\n          axis.setPrivateRaw(updateScrollbar, true);\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axes, container) {\n      var _this = this;\n\n      return axes.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          $array.each(change.oldValues, function (axis) {\n            _this._removeAxis(axis);\n          });\n        } else if (change.type === \"push\") {\n          container.children.push(change.newValue);\n          change.newValue.processChart(_this);\n        } else if (change.type === \"setIndex\") {\n          container.children.setIndex(change.index, change.newValue);\n          change.newValue.processChart(_this);\n        } else if (change.type === \"insertIndex\") {\n          container.children.insertIndex(change.index, change.newValue);\n          change.newValue.processChart(_this);\n        } else if (change.type === \"removeIndex\") {\n          _this._removeAxis(change.oldValue);\n        } else if (change.type === \"moveIndex\") {\n          container.children.moveValue(change.value, change.newIndex);\n          change.value.processChart(_this);\n        } else {\n          throw new Error(\"Unknown IListEvent type\");\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_removeAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axis) {\n      if (!axis.isDisposed()) {\n        var axisParent = axis.parent;\n\n        if (axisParent) {\n          axisParent.children.removeValue(axis);\n        }\n\n        var gridContainer = axis.gridContainer;\n        var gridParent = gridContainer.parent;\n\n        if (gridParent) {\n          gridParent.children.removeValue(gridContainer);\n        }\n\n        var topGridContainer = axis.topGridContainer;\n        var topGridParent = topGridContainer.parent;\n\n        if (topGridParent) {\n          topGridParent.children.removeValue(topGridContainer);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_updateChartLayout\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var left = this.leftAxesContainer.width();\n      var right = this.rightAxesContainer.width();\n      var bottomAxesContainer = this.bottomAxesContainer;\n      bottomAxesContainer.set(\"paddingLeft\", left);\n      bottomAxesContainer.set(\"paddingRight\", right);\n      var topAxesContainer = this.topAxesContainer;\n      topAxesContainer.set(\"paddingLeft\", left);\n      topAxesContainer.set(\"paddingRight\", right);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYChart.prototype, \"processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_axis) {}\n  });\n  ;\n  Object.defineProperty(XYChart.prototype, \"_handleAxisSelection\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axis, force) {\n      var _a;\n\n      var start = axis.fixPosition(axis.get(\"start\", 0));\n      var end = axis.fixPosition(axis.get(\"end\", 1));\n\n      if (start > end) {\n        _a = __read([end, start], 2), start = _a[0], end = _a[1];\n      }\n\n      if (this.xAxes.indexOf(axis) != -1) {\n        if (force || axis.getPrivate(\"updateScrollbar\")) {\n          var scrollbarX = this.get(\"scrollbarX\");\n\n          if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n            scrollbarX.setRaw(\"start\", start);\n            scrollbarX.setRaw(\"end\", end);\n            scrollbarX.updateGrips();\n          }\n        }\n      } else if (this.yAxes.indexOf(axis) != -1) {\n        if (force || axis.getPrivate(\"updateScrollbar\")) {\n          var scrollbarY = this.get(\"scrollbarY\");\n\n          if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n            scrollbarY.setRaw(\"start\", start);\n            scrollbarY.setRaw(\"end\", end);\n            scrollbarY.updateGrips();\n          }\n        }\n      }\n\n      this._handleZoomOut();\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleZoomOut\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var zoomOutButton = this.zoomOutButton;\n\n      if (zoomOutButton && zoomOutButton.parent) {\n        var visible_1 = false;\n        this.xAxes.each(function (axis) {\n          if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n            visible_1 = true;\n          }\n        });\n        this.yAxes.each(function (axis) {\n          if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n            visible_1 = true;\n          }\n        });\n\n        if (visible_1) {\n          if (zoomOutButton.isHidden()) {\n            zoomOutButton.show();\n          }\n        } else {\n          zoomOutButton.hide();\n        }\n      }\n    }\n  });\n  /**\r\n   * Checks if point is within plot area.\r\n   *\r\n   * @param   point  Reference point\r\n   * @return         Is within plot area?\r\n   */\n\n  Object.defineProperty(XYChart.prototype, \"inPlot\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      var plotContainer = this.plotContainer;\n      var otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n      var global = plotContainer.toGlobal(point);\n\n      if (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n        return true;\n      }\n\n      if (otherCharts) {\n        for (var i = otherCharts.length - 1; i >= 0; i--) {\n          var chart = otherCharts[i];\n\n          if (chart != this) {\n            var chartPlotContainer = chart.plotContainer;\n\n            var documentPoint = this._root.rootPointToDocument(global);\n\n            var chartRoot = chart._root.documentPointToRoot(documentPoint);\n\n            var local = chartPlotContainer.toLocal(chartRoot);\n\n            if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYChart.prototype, \"arrangeTooltips\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var plotContainer = this.plotContainer;\n      var w = plotContainer.width();\n      var h = plotContainer.height();\n\n      var plotT = plotContainer._display.toGlobal({\n        x: 0,\n        y: 0\n      });\n\n      var plotB = plotContainer._display.toGlobal({\n        x: w,\n        y: h\n      });\n\n      var tooltips = [];\n      var sum = 0;\n      var minDistance = Infinity;\n      var movePoint = this._movePoint;\n      var maxTooltipDistance = this.get(\"maxTooltipDistance\");\n      var maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n      var closest;\n      var closestPoint;\n\n      if ($type.isNumber(maxTooltipDistance)) {\n        this.series.each(function (series) {\n          var tooltip = series.get(\"tooltip\");\n\n          if (tooltip) {\n            var point = tooltip.get(\"pointTo\");\n\n            if (point) {\n              var distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\n              if (maxTooltipDistanceBy == \"x\") {\n                distance = Math.abs(movePoint.x - point.x);\n              } else if (maxTooltipDistanceBy == \"y\") {\n                distance = Math.abs(movePoint.y - point.y);\n              }\n\n              if (distance < minDistance) {\n                minDistance = distance;\n                closest = series;\n                closestPoint = point;\n              }\n            }\n          }\n        });\n      }\n\n      var tooltipSeries = [];\n      this.series.each(function (series) {\n        var tooltip = series.get(\"tooltip\");\n\n        if (tooltip) {\n          var hidden = false;\n          var point = tooltip.get(\"pointTo\");\n\n          if (point) {\n            if (maxTooltipDistance >= 0) {\n              var point_1 = tooltip.get(\"pointTo\");\n\n              if (point_1) {\n                if (series != closest) {\n                  var distance = Math.hypot(closestPoint.x - point_1.x, closestPoint.y - point_1.y);\n\n                  if (maxTooltipDistanceBy == \"x\") {\n                    distance = Math.abs(closestPoint.x - point_1.x);\n                  } else if (maxTooltipDistanceBy == \"y\") {\n                    distance = Math.abs(closestPoint.y - point_1.y);\n                  }\n\n                  if (distance > maxTooltipDistance) {\n                    hidden = true;\n                  }\n                }\n              }\n            } else if (maxTooltipDistance == -1) {\n              if (series != closest) {\n                hidden = true;\n              }\n            }\n\n            if (!_this.inPlot(_this._tooltipToLocal(point)) || !tooltip.dataItem) {\n              hidden = true;\n            } else {\n              if (!hidden) {\n                sum += point.y;\n              }\n            }\n\n            if (hidden || series.isHidden() || series.isHiding()) {\n              tooltip.hide(0);\n            } else {\n              tooltip.show();\n              tooltips.push(tooltip);\n              tooltipSeries.push(series);\n            }\n          }\n        }\n      });\n      this.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n      if (this.get(\"arrangeTooltips\")) {\n        var tooltipContainer_1 = this._root.tooltipContainer;\n        var count = tooltips.length;\n        var average = sum / count;\n\n        if (average > h / 2 + plotT.y) {\n          tooltips.sort(function (a, b) {\n            return $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y);\n          });\n          var prevY_1 = plotB.y;\n          $array.each(tooltips, function (tooltip) {\n            var height = tooltip.height();\n            var centerY = tooltip.get(\"centerY\");\n\n            if (centerY instanceof Percent) {\n              height *= centerY.value;\n            }\n\n            height += tooltip.get(\"marginBottom\", 0);\n            tooltip.set(\"bounds\", {\n              left: plotT.x,\n              top: plotT.y,\n              right: plotB.x,\n              bottom: prevY_1\n            });\n            prevY_1 = Math.min(prevY_1 - height, tooltip._fy - height);\n            tooltipContainer_1.children.moveValue(tooltip, 0);\n          });\n        } else {\n          tooltips.reverse();\n          tooltips.sort(function (a, b) {\n            return $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y);\n          });\n          var prevY_2 = 0;\n          $array.each(tooltips, function (tooltip) {\n            var height = tooltip.height();\n            var centerY = tooltip.get(\"centerY\");\n\n            if (centerY instanceof Percent) {\n              height *= centerY.value;\n            }\n\n            height += tooltip.get(\"marginBottom\", 0);\n            tooltip.set(\"bounds\", {\n              left: plotT.x,\n              top: prevY_2,\n              right: plotB.x,\n              bottom: Math.max(plotT.y + h, prevY_2 + height)\n            });\n            tooltipContainer_1.children.moveValue(tooltip, 0);\n            prevY_2 = Math.max(prevY_2 + height, tooltip._fy + height);\n          });\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_tooltipToLocal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this.plotContainer.toLocal(point);\n    }\n  });\n  /**\r\n   * Fully zooms out the chart.\r\n   */\n\n  Object.defineProperty(XYChart.prototype, \"zoomOut\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.xAxes.each(function (axis) {\n        axis.setPrivate(\"updateScrollbar\", true);\n        axis.zoom(0, 1);\n      });\n      this.yAxes.each(function (axis) {\n        axis.setPrivate(\"updateScrollbar\", true);\n        axis.zoom(0, 1);\n      });\n    }\n  });\n  Object.defineProperty(XYChart, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"XYChart\"\n  });\n  Object.defineProperty(XYChart, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: SerialChart.classNames.concat([XYChart.className])\n  });\n  return XYChart;\n}(SerialChart);\n\nexport { XYChart };","map":{"version":3,"mappings":"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","names":["XYChartDefaultTheme","Container","Rectangle","SerialChart","ListAutoDispose","p100","Color","Button","Graphics","Percent","$array","$type","$order","$object","$utils","__extends","Object","_this","chartContainer","children","push","new","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_defaultThemes","_super","_afterNew","call","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fromHex","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","series","xAxis","remove","yAxis","cursor","snapToSeries","_removeSeries","wheelX","wheelY","wheelEvent","isLocalEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","_getWheelSign","se","_fixWheel","_wheelDp","handleWheel","dispose","sign","diff","local","touchEvent","pointerId","keys","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","_movePoints","_handlePinch","downPoint","local_1","scrollbarX","disableType","panStart","panEnd","difference","enableType","scrollbarY","i","downPoints","movePoints","k","point","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","_a","_b","downPos0","downPos1","movePos0","movePos1","initialDistance","Math","max","currentDistance","d","s_1","e_1","sa","ea","downStartY","downEndY","_c","_d","s_2","e_2","cursorPoint_1","snapToSeriesBy_1","dataItems_1","isHidden","isHiding","startIndex","endIndex","dataItem","dataItems","tooltipDataItem","minDistance_1","closestItem_1","distance","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","moveValue","value","newIndex","Error","isDisposed","axisParent","removeValue","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","visible_1","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","plotT","plotB","tooltips","sum","minDistance","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","closest","closestPoint","isNumber","tooltipSeries","hidden","point_1","inPlot","_tooltipToLocal","tooltipContainer_1","tooltipContainer","count","average","sort","a","b","compareNumber","prevY_1","centerY","top","bottom","min","_fy","reverse","prevY_2","classNames","concat","XYChart","className"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/xy/XYChart.ts"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t * \n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t * \n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * @ignore\n\t */\n\totherCharts?: Array<XYChart>\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\t \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t * \n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.* \n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tthis.handleWheel(event);\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: event.clientX, y: event.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}